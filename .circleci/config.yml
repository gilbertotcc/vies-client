version: 2

jobs:
  test:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    steps:

      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
          - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          command: ./gradlew build -i -s --max-workers=1
          environment:
            JAVA_TOOL_OPTIONS: -Xmx512m

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit
          destination: junit

      - store_artifacts:
          path: build/reports
          destination: reports

  release:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    steps:
      - add_ssh_keys:
          fingerprints:
            - "8f:e2:08:88:1a:5c:28:4d:2b:a5:63:58:e4:36:28:39"

      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: git config --global user.email "${GIT_USER_EMAIL}"
      - run: git config --global user.name "${GIT_USER_NAME}"
      - run: gradle release -Prelease.useAutomaticVersion=true -i

      - store_artifacts:
          path: build/libs/
          destination: jars

workflows:
  version: 2
  test-build-release:
    jobs:
      - test
      - release:
          requires:
            - test
          filters:
            branches:
              only:
                - master

